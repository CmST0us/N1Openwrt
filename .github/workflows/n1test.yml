#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: N1test

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  PLUS_CONFIG_FILE: plus.config
  MINI_CONFIG_FILE: mini.config
  DIY_SH: diy.sh
  UPLOAD_COWTRANSFER: true
  TZ: Asia/Shanghai
  RELEASE: true
  DELETE_IPK: true

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804) tree
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
        sudo mkdir -p /upload
        sudo chown $USER:$GROUPS /upload
        
        cd /upload
        echo "UPLOAD=$PWD" >> $GITHUB_ENV
        
        echo "tag_name=$(date +%Y%m%d%H)" >> $GITHUB_ENV
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt 
        cd openwrt
        
    - name: Update & Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      
    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH   
        
     - name: Mini Compile Firmware
      id: minicompile   
      run: |
        [ -e $MINI_CONFIG_FILE ] && mv -f $MINI_CONFIG_FILE openwrt/.config
        
        cd openwrt
        ake defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        make -j$(nproc) || make -j1 || make -j1 V=s
        
        cp .config ${UPLOAD}/mini.config
        cd bin/targets/*/*
        cp openwrt-armvirt-64-default-rootfs.tar.gz  ${UPLOAD}/openwrt-armvirt-64-default-rootfs-mini.tar.gz
        cp -r *.xz ${UPLOAD}/   
        
    - name: Plus Compile Firmware
      id: pluscompile
      run: |
        rm -rf openwrt/.config.old
        mv -f openwrt/.config openwrt/.config.old       
        
        [ -e $PLUS_CONFIG_FILE ] && mv $PLUS_CONFIG_FILE openwrt/.config
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo -e "$(nproc) thread compile"
        
        make -j$(nproc) || make -j1 || make -j1 V=s
        
        cp .config ${UPLOAD}/plus.config
        cd bin/targets/*/*
        cp openwrt-armvirt-64-default-rootfs.tar.gz  ${UPLOAD}/openwrt-armvirt-64-default-rootfs-plus.tar.gz
        
        echo "::set-output name=status::success"       


        

